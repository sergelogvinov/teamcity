name: Release

on:
  pull_request:
    branches:
      - master
    types: [closed]

env:
  CODE_TAG: ${{ github.head_ref }}

jobs:
  publish-release:
    needs: [build-release]
    runs-on: ubuntu-latest
    if: github.base_ref == 'master' && startsWith(github.head_ref, 'release_') && github.event.pull_request.merged
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: 'master'
          fetch-depth: '0'
      - name: Make tag
        uses: tvdias/github-tagger@v0.0.2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.CODE_TAG }}
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.head_ref }}
          release_name: Release ${{ github.head_ref }}
          body: |
            Release labels: ${{ join(github.event.pull_request.labels.*.name) }}

            docker pull ghcr.io/${{ github.repository }}/teamcity:${{ env.CODE_TAG }}
            docker pull ghcr.io/${{ github.repository }}/teamcity-agent:${{ env.CODE_TAG }}
            # or
            docker pull sergelog/teamcity:${{ env.CODE_TAG }}
            docker pull sergelog/teamcity-agent:${{ env.CODE_TAG }}

          prerelease: "!startsWith(github.head_ref, 'release_')"

  build-release:
    runs-on: ubuntu-latest
    if: github.base_ref == 'master' && startsWith(github.head_ref, 'release_') && github.event.pull_request.merged
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: 'master'
      - name: Build
        run: make build

      - name: Github registry login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push images to github
        run: make push
        env:
          REGISTRY: ghcr.io/${{ github.repository }}

      - name: Docker registry login
        uses: docker/login-action@v2
        with:
          username: sergelog
          password: ${{ secrets.DOCKERIO_PASSWORD }}
        env:
          REGISTRY: sergelog
      - name: Push images to docker hub
        run: make push
        env:
          REGISTRY: sergelog
